#!/bin/bash

function error() {
	echo "ERROR: $*" 1>&2
	exit 1
}

if [ "$1" == "--help" ]; then
	echo -e "Usage=\tul --help
\tul getUlRoot
\tul getPropertiesFile
\tul setProperty <property> <value>
\tul getProperty <property>
\tul getProperties
\tul getServersDir
\tul getConfsDir
\tul getConfDir <conf>
\tul getLoadedConfPath
\tul loadConf <confpath>
\tul getConfInit <conf>
\tul createConf <conf>
\tul deleteConf <conf>
\tul createDefaultConf
\tul doesConfExist <conf>
\tul listLocalConfs
\tul cpConf <from> <to>
\tul addServer <servername> <path>
\tul deleteServer <servername>
\tul listServers
\tul getServerURL <server>
\tul getServerConfURL <serverconf>
\tul getServerConfFiles <serverconf>"

fi

if [ "$1" == "getUlRoot" ]; then
	[ ! "$2" == "-q" ] && [ ! -f "$HOME"/.ulroot ] && error "ulroot unset"
	x=$(cat "$HOME"/.ulroot)
	[ ! "$2" == "-q" ] && [ ! -d "$x" ] && error "ulroot directory not found"
	echo "$x"
fi

if [ "$1" == "getPropertiesFile" ]; then
	propsfile=$(. $0 getUlRoot)/properties
	[ "$?" == 1 ] && exit 1
	[ ! "$2" == "-q" ] && [ ! -f "$propsfile" ] && error "propsfile not found unset"
	echo "$propsfile"
fi

if [ "$1" == "setProperty" ]; then
	propsfile=$(. $0 getPropertiesFile)
	sed "/$2=*/d" -i $propsfile
	echo "$2=$3" >> $propsfile
fi

if [ "$1" == "getProperty" ]; then
	propsfile=$(. $0 getPropertiesFile)
	grep "$2=" $propsfile | sed "s/$2=//g"
fi

if [ "$1" == "getProperties" ]; then
	cat $(. $0 getPropertiesFile)
fi

if [ "$1" == "getServersDir" ]; then
	echo "$(. $0 getUlRoot)/servers"
fi

if [ "$1" == "getConfsDir" ]; then
	echo "$(. $0 getUlRoot)/confs"
fi

if [ "$1" == "getConfDir" ]; then
	echo "$(. $0 getConfsDir)/$2"
fi

if [ "$1" == "getLoadedConfPath" ]; then
	echo $(. $0 getConfDir $(. $0 getProperty loadedConf))
fi

if [ "$1" == "loadConf" ]; then
	initpath=$(. $0 getConfInit $2)
	if [ -f "$initpath" ]; then
		./"$initpath"
	fi
	. $0 setProperty loadedConf $2
	sympath="$(. $0 getUlRoot)/loadedConf"
	if [ -d "$sympath" ]; then
		rm "$sympath"
	fi
	ln -s "$(. $0 getLoadedConfPath)" "$sympath"
fi

if [ "$1" == "getConfInit" ]; then
	echo $(. $0 getConfDir $2)/init
fi

if [ "$1" == "createConf" ]; then
	if [ ! "$(. $0 doesConfExist $2)" == "true" ]; then
		confdir="$(. $0 getConfDir $2)"
		mkdir "$confdir"
	fi
fi

if [ "$1" == "deleteConf" ]; then
	if [[ ! "$(. $0 doesConfExist $2)" == "true" ]]; then
		if [ ! "$3" == "-q" ]; then
			echo "conf $2 doesn't exist"
		fi
	elif [ "$2" == "$(. $0 getProperty loadedConf)" ]; then
		echo "Cannot delete loaded conf"
	else
		confdir="$(. $0 getConfDir $2)"
		rm -r "$confdir"
	fi
fi

if [ "$1" == "createDefaultConf" ]; then
	. $0 createConf default
fi

if [ "$1" == "doesConfExist" ]; then
	if [ -d $(. $0 getConfDir $2) ]; then
		echo true
	else
		echo false
	fi
fi

if [ "$1" == "listLocalConfs" ]; then
	loadedConf=$(. $0 getProperty loadedConf)
	ls $(. $0 getConfsDir) | sed "s/$loadedConf/<$loadedConf>/g"
fi

if [ "$1" == "cpConf" ]; then
	if [ -z "$3" ]; then
		error "cpConf: wrong amount of arguments"
	fi

	if [[ $2 == *:* ]]; then
		if [[ $3 == *:* ]]; then # server to server
			error "TODO"
		else # server to local
			serverpath="$(. $0 getServerURL "$2")"
			files="$(. $0 getServerConfFiles $2)"
			confname="$(sed 's/.*://g' <<< "$2")"
			. $0 deleteConf "$3" "-q"
			. $0 createConf "$3"
			for file in $files
			do
				filetarget="$(sed 's/confs\/'"$confname"'\///g' <<< "$file")"
				curl -s "$serverpath/$file" -o "$(. $0 getConfDir $3)/$filetarget"
			done
		fi
	else
		if [[ $3 == *:* ]]; then # local to server
			error "TODO"
		else # local to local
			frompath=$(. $0 getConfDir $2)
			[ ! -d $frompath ] && error "conf $2 not found"
			topath=$(. $0 getConfDir $3)
			cp -r $frompath $topath
		fi
	fi
fi

if [ "$1" == "addServer" ]; then
	echo "$3" > "$(. $0 getServersDir)/$2"
fi

if [ "$1" == "deleteServer" ]; then
	rm "$(. $0 getServersDir)/$2"
fi

if [ "$1" == "listServers" ]; then
	for file in $(ls "$(. $0 getServersDir)/$2")
	do
		echo $file=$(cat $(. $0 getServersDir)/$file)
	done
fi

if [ "$1" == "getServerURL" ]; then
	if [[ $2 == *:* ]]; then
		set $2 $(sed 's/:.*//g' <<< $2)
	fi

	if [[ $2 == @* ]]; then
		servers="$(. $0 listServers)"
		for server in $servers
		do
			one="$(sed 's/@//g' <<< "$2")"
			two="$(sed 's/=.*//g' <<< "$server")"
			if [ "$one" == "$two" ]; then
				echo $server | sed 's/.*=//g'
				break
			fi
		done
	else
		echo $2
	fi
fi

if [ "$1" == "getServerConfURL" ]; then
	server="$(. $0 getServerURL "$(sed 's/:.*//g' <<< "$2")")"
	confname="$(sed 's/.*://g' <<< "$2")"
	echo "$server/confs/$confname"
fi

if [ "$1" == "getServerConfFiles" ]; then
	url="$(. $0 getServerURL "$2")"
	confname="$(sed 's/.*://g' <<< "$2")"
	path="$url/index.php?cmd=getFiles&conf=$confname"
	echo "$(curl -s "$path")"
fi
